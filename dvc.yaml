stages:
  prepare:
    cmd: python -m scripts.prepare
    deps:
    - scripts/prepare.py
    - data/all.csv
    params:
    - basic
    outs:
    - outputs/vocab.plk
    - outputs/config.json
  validate:
    foreach: # List of simple values
      - mlp
      - lstm
      - cnn
      - selected
    do:
      cmd: python -m scripts.validate ${item}
      deps:
        - data/all.csv
        - outputs/vocab.plk
        - outputs/config.json
        - scripts/validate.py
      params:
        - ${item}
        - validate
      metrics:
        - outputs/${item}_validate_results.json:
            cache: false
      plots:
        - outputs/${item}_validate_plots.csv:
            cache: false

  validate_bert:
    foreach: # List of simple values
      bert-base-uncased_basic:
        pretrained_model: bert-base-uncased
        method: basic
      bert-base-uncased_lstm:
        pretrained_model: bert-base-uncased
        method: lstm
      bert-large-uncased_basic:
        pretrained_model: bert-large-uncased
        method: basic
      bert-large-uncased_lstm:
        pretrained_model: bert-large-uncased
        method: lstm
    do:
      cmd: python -m scripts.validate_bert bert ${item.pretrained_model} ${item.method}
      deps:
        - data/all.csv
        - model/bert/${item.method}.py
        - scripts/validate_bert.py
      params:
        - bert.max_len
        - bert.do_lower_case
        - bert.${item.method}
        - validate
      metrics:
        - outputs/bert-${item.pretrained_model}-${item.method}_validate_results.json:
            cache: false
      plots:
        - outputs/bert-${item.pretrained_model}-${item.method}_validate_plots.csv:
            cache: false

  validate_xlnet:
    foreach: # List of simple values
      - basic
      - sequence_classification
    do:
      cmd: python -m scripts.validate_bert xlnet ${item}
      deps:
        - data/all.csv
        - model/xlnet/${item}.py
        - scripts/validate_bert.py
      params:
        - xlnet.max_len
        - xlnet.${item}
        - xlnet.pretrained_model
        - validate
      metrics:
        - outputs/xlnet-${item}_validate_results.json:
            cache: false
      plots:
        - outputs/xlnet-${item}_validate_plots.csv:
            cache: false

  validate_roberta:
    foreach: # List of simple values
      siebert/sentiment-roberta-large-english_sentiment:
        pretrained_model: siebert/sentiment-roberta-large-english
        method: sentiment
    do:
      cmd: python -m scripts.validate_bert roberta ${item.pretrained_model} ${item.method}
      deps:
        - data/train.csv
        - model/roberta/${item.method}.py
        - scripts/validate_bert.py
      params:
        - roberta.max_len
        - roberta.do_lower_case
        - roberta.${item.method}
        - validate
      metrics:
        - outputs/roberta-${item.pretrained_model}-${item.method}_validate_results.json:
            cache: false
      plots:
        - outputs/roberta-${item.pretrained_model}-${item.method}_validate_plots.csv:
            cache: false

  train:
    foreach: # List of simple values
    - mlp
    - lstm
    - cnn
    - selected
    do:
      cmd: python -m scripts.train ${item}
      deps:
      - data/all.csv
      - outputs/vocab.plk
      - outputs/config.json
      - scripts/train.py
      params:
      - ${item}
      - train
      metrics:
      - outputs/${item}_results.json:
          cache: false
      plots:
      - outputs/${item}_plots.csv:
          cache: false
      outs:
      - outputs/${item}_checkpoint.pth

  train_bert:
    foreach: # List of simple values
      bert-base-uncased_basic:
        pretrained_model: bert-base-uncased
        method: basic
      bert-base-uncased_lstm:
        pretrained_model: bert-base-uncased
        method: lstm
      bert-large-uncased_basic:
        pretrained_model: bert-large-uncased
        method: basic
      bert-large-uncased_lstm:
        pretrained_model: bert-large-uncased
        method: lstm
      bert-large-uncased_cnn:
        pretrained_model: bert-large-uncased
        method: cnn
    do:
      cmd: python -m scripts.train_bert bert ${item.pretrained_model} ${item.method}
      deps:
        - data/all.csv
        - model/bert/${item.method}.py
        - scripts/train_bert.py
      params:
        - bert.max_len
        - bert.do_lower_case
        - bert.${item.method}
        - train
      metrics:
        - outputs/bert-${item.pretrained_model}-${item.method}_results.json:
            cache: false
      plots:
        - outputs/bert-${item.pretrained_model}-${item.method}_plots.csv:
            cache: false
      outs:
        - outputs/bert-${item.pretrained_model}-${item.method}_checkpoint.pth

  train_xlnet:
    foreach: # List of simple values
      xlnet-base-cased_basic:
        pretrained_model: xlnet-base-cased
        method: basic
      xlnet-large-cased_basic:
        pretrained_model: xlnet-large-cased
        method: basic
    do:
      cmd: python -m scripts.train_bert xlnet ${item.pretrained_model} ${item.method}
      deps:
        - data/all.csv
        - model/xlnet/${item.method}.py
        - scripts/train_bert.py
      params:
        - xlnet.max_len
        - xlnet.do_lower_case
        - xlnet.${item.method}
        - train
      metrics:
        - outputs/xlnet-${item.pretrained_model}-${item.method}_results.json:
            cache: false
      plots:
        - outputs/xlnet-${item.pretrained_model}-${item.method}_plots.csv:
            cache: false
      outs:
        - outputs/xlnet-${item.pretrained_model}-${item.method}_checkpoint.pth

  train_roberta:
    foreach: # List of simple values
      roberta-base_basic:
        pretrained_model: roberta-base
        method: basic
      roberta-large_basic:
        pretrained_model: roberta-large
        method: basic
      roberta-large_cnn:
        pretrained_model: roberta-large
        method: cnn
    do:
      cmd: python -m scripts.train_bert roberta ${item.pretrained_model} ${item.method}
      deps:
        - data/all.csv
        - model/roberta/${item.method}.py
        - scripts/train_bert.py
      params:
        - roberta.max_len
        - roberta.do_lower_case
        - roberta.${item.method}
        - train
      metrics:
        - outputs/roberta-${item.pretrained_model}-${item.method}_results.json:
            cache: false
      plots:
        - outputs/roberta-${item.pretrained_model}-${item.method}_plots.csv:
            cache: false
      outs:
        - outputs/roberta-${item.pretrained_model}-${item.method}_checkpoint.pth

  inference:
    foreach: # List of simple values
    - mlp
    - lstm
    - cnn
    - selected
    do:
      cmd: python -m scripts.inference ${item}
      deps:
      - data/test.csv
      - scripts/inference.py
      - outputs/${item}_checkpoint.pth
      - outputs/config.json
      outs:
      - outputs/${item}_submission.csv

  inference_bert:
    foreach: # List of simple values
      bert-base-uncased_basic:
        pretrained_model: bert-base-uncased
        method: basic
      bert-base-uncased_lstm:
        pretrained_model: bert-base-uncased
        method: lstm
      bert-large-uncased_basic:
        pretrained_model: bert-large-uncased
        method: basic
      bert-large-uncased_lstm:
        pretrained_model: bert-large-uncased
        method: lstm
    do:
      cmd: python -m scripts.inference_bert bert ${item.pretrained_model} ${item.method}
      deps:
        - data/test.csv
        - scripts/inference_bert.py
        - outputs/bert-${item.pretrained_model}-${item.method}_checkpoint.pth
      outs:
        - outputs/bert-${item.pretrained_model}-${item.method}_submission.csv

  inference_xlnet:
    foreach: # List of simple values
      xlnet-base-cased_basic:
        pretrained_model: xlnet-base-cased
        method: basic
      xlnet-large-cased_basic:
        pretrained_model: xlnet-large-cased
        method: basic
    do:
      cmd: python -m scripts.inference_bert xlnet ${item.pretrained_model} ${item.method}
      deps:
        - data/test.csv
        - scripts/inference_bert.py
        - outputs/xlnet-${item.pretrained_model}-${item.method}_checkpoint.pth
      outs:
        - outputs/xlnet-${item.pretrained_model}-${item.method}_submission.csv

  inference_roberta:
    foreach: # List of simple values
      roberta-base_basic:
        pretrained_model: roberta-base
        method: basic
      roberta-large_basic:
        pretrained_model: roberta-large
        method: basic
    do:
      cmd: python -m scripts.inference_bert roberta ${item.pretrained_model} ${item.method}
      params:
        - roberta.eval_max_len
      deps:
        - data/test.csv
        - scripts/inference_bert.py
        - outputs/roberta-${item.pretrained_model}-${item.method}_checkpoint.pth
      outs:
        - outputs/roberta-${item.pretrained_model}-${item.method}_submission.csv

  ensemble:
    cmd: python -m scripts.ensemble
    deps:
      - scripts/ensemble.py
      - data/test.csv
      - outputs/bert-bert-large-uncased-basic_checkpoint.pth
      - outputs/roberta-roberta-large-basic_checkpoint.pth
      - outputs/xlnet-xlnet-large-cased-basic_checkpoint.pth
    params:
      - evaluate
    outs:
      - outputs/ensemble.csv
